# Generated by Django 2.1.2 on 2019-04-05 20:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CollegeEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('Graduation', 'Graduation'), ('Post-Graduation', 'Post-Graduation'), ('PhD', 'PhD'), ('Diploma', 'Diploma')], max_length=50)),
                ('branch', models.CharField(max_length=50)),
                ('college', models.CharField(max_length=200)),
                ('start_date', models.IntegerField(blank=True, choices=[(2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019)], null=True, verbose_name='Year of admission')),
                ('end_date', models.IntegerField(blank=True, choices=[(2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], null=True, verbose_name='Passing year')),
                ('marks', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, verbose_name='Aggregate Marks/CGPA')),
            ],
        ),
        migrations.CreateModel(
            name='ExtraInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=1024, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('fathers_education', models.CharField(blank=True, choices=[('UP TO 5TH', 'UP TO 5TH'), ('UP TO 8TH', 'UP TO 8TH'), ('UP TO 10TH', 'UP TO 10TH'), ('UP TO 12TH', 'UP TO 12TH'), ('UP TO UG', 'UP TO UG'), ('UP TO PG', 'UP TO PG'), ('ANY OTHER', 'ANY OTHER')], max_length=20, null=True)),
                ('mothers_education', models.CharField(blank=True, choices=[('UP TO 5TH', 'UP TO 5TH'), ('UP TO 8TH', 'UP TO 8TH'), ('UP TO 10TH', 'UP TO 10TH'), ('UP TO 12TH', 'UP TO 12TH'), ('UP TO UG', 'UP TO UG'), ('UP TO PG', 'UP TO PG'), ('ANY OTHER', 'ANY OTHER')], max_length=20, null=True)),
                ('family_income', models.CharField(blank=True, choices=[('< 50,000', '< 50,000'), ('50,000 - 1,00,000', '50,000 - 1,00,000'), ('1,00,000 - 2,50,000', '1,00,000 - 2,50,000'), ('2,50,000 - 4,00,000', '2,50,000 - 4,00,000'), ('4,00,000 - 6,00,000', '4,00,000 - 6,00,000'), ('6,00,000 - 10,00,000', '6,00,000 - 10,00,000'), ('10,00,000 >', '10,00,000 >')], max_length=20, null=True)),
                ('school_attended_12th', models.CharField(blank=True, choices=[('GOVT', 'GOVT'), ('GOVT AIDED', 'GOVT AIDED'), ('SELF FINANCING/ UNAIDED', 'SELF FINANCING/ UNAIDED')], max_length=20, null=True)),
                ('board', models.CharField(blank=True, choices=[('CBSE', 'CBSE'), ('State Board', 'State Board'), ('NIOS', 'NIOS'), ('Madarsa', 'Madarsa'), ('Other', 'Other')], max_length=20, null=True)),
                ('aadhar_number', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9999999999999999)])),
                ('religion', models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Sikh', 'Sikh'), ('Christain', 'Christain'), ('Jain', 'Jain'), ('Buddhist', 'Buddhist'), ('Parshi', 'Parshi'), ('Any other', 'Any other')], max_length=20, null=True)),
                ('fathers_employment', models.CharField(blank=True, choices=[('GOVT Service, PSU', 'GOVT Service, PSU'), ('Private service', 'Private service'), ('Self employed', 'Self employed'), ('Professional', 'Professional'), ('Casual Labour', 'Casual Labour'), ('Farming, Agri-Labour', 'Farming, Agri-Labour'), ('Unemployed', 'Unemployed'), ('Other', 'Other')], max_length=20, null=True)),
                ('mothers_employment', models.CharField(blank=True, choices=[('GOVT Service, PSU', 'GOVT Service, PSU'), ('Private service', 'Private service'), ('Self employed', 'Self employed'), ('Professional', 'Professional'), ('Casual Labour', 'Casual Labour'), ('Farming, Agri-Labour', 'Farming, Agri-Labour'), ('House wife', 'House wife'), ('Other', 'Other')], max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarkSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester_1', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(10.0), django.core.validators.MinValueValidator(0.0)])),
                ('semester_2', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(10.0), django.core.validators.MinValueValidator(0.0)])),
                ('semester_3', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(10.0), django.core.validators.MinValueValidator(0.0)])),
                ('semester_4', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(10.0), django.core.validators.MinValueValidator(0.0)])),
                ('semester_5', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(10.0), django.core.validators.MinValueValidator(0.0)])),
                ('semester_6', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(10.0), django.core.validators.MinValueValidator(0.0)])),
                ('semester_7', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(10.0), django.core.validators.MinValueValidator(0.0)])),
                ('semester_8', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(10.0), django.core.validators.MinValueValidator(0.0)])),
                ('cgpa', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(10.0), django.core.validators.MinValueValidator(0.0)])),
                ('credits_skipped', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('backlogs', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Number of Backlogs')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(choices=[('HighSchool', 'High School'), ('SeniorSecondary', 'Senior Secondary')], max_length=20, null=True)),
                ('year', models.IntegerField(blank=True, choices=[(2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019)], null=True)),
                ('board', models.CharField(blank=True, max_length=50, null=True)),
                ('school', models.CharField(blank=True, max_length=100, null=True)),
                ('marks', models.CharField(blank=True, max_length=5, null=True, verbose_name='Percentage/CGPA')),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_no', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100, verbose_name='Full Name')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Transgender', 'Transgender')], max_length=11)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('college', models.CharField(choices=[('USICT', 'U.S.I.C.T.')], default='USICT', max_length=10)),
                ('course', models.CharField(choices=[('BtechCSE', 'B.TECH - CSE'), ('BtechIT', 'B.TECH - IT'), ('BtechECE', 'B.TECH - ECE'), ('MtechCSE', 'M.TECH - CSE'), ('MtechIT', 'M.TECH - IT'), ('MtechECE', 'M.TECH - ECE'), ('MCA', 'MCA')], max_length=20)),
                ('admission_year', models.IntegerField(blank=True, choices=[(2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019)], null=True, verbose_name='Year of Admission')),
                ('passing_year', models.IntegerField(blank=True, choices=[(2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], null=True, verbose_name='Year of Passing Out')),
                ('fathers_name', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(choices=[('DEL', 'Delhi'), ('ODEL', 'Outside Delhi')], max_length=20)),
                ('category', models.CharField(choices=[('UR', 'Unreserved'), ('OBC', 'OBC'), ('SC', 'SC'), ('ST', 'ST'), ('OTH', 'Other')], max_length=20)),
                ('primary_mobile', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9999999999)], verbose_name='Mobile Number')),
                ('secondary_mobile', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9999999999)], verbose_name='Alternative Mobile Number')),
                ('address', models.TextField(blank=True, max_length=200, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Profile',
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Internship', 'Internship'), ('Project', 'Project'), ('Training', 'Training'), ('Achievement', 'Achievement'), ('Other', 'Other')], max_length=15, null=True)),
                ('title', models.CharField(max_length=50, null=True)),
                ('start_date', models.DateField(null=True, verbose_name='Starting Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Ending Date')),
                ('url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(max_length=200, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.StudentProfile')),
            ],
        ),
        migrations.AddField(
            model_name='schooleducation',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.StudentProfile'),
        ),
        migrations.AddField(
            model_name='marksheet',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student.StudentProfile'),
        ),
        migrations.AddField(
            model_name='extrainfo',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student.StudentProfile'),
        ),
        migrations.AddField(
            model_name='collegeeducation',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.StudentProfile'),
        ),
    ]
